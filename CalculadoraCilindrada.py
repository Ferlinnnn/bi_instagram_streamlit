import streamlit as st
import math

def calcular_cilindrada(diametro_pistao, curso_virabrequim, num_cilindros):
    """
    Calcula a cilindrada total do motor
    
    Par√¢metros:
    - diametro_pistao: Di√¢metro do pist√£o em mil√≠metros
    - curso_virabrequim: Curso do virabrequim em mil√≠metros
    - num_cilindros: N√∫mero de cilindros do motor
    
    Retorna:
    - Cilindrada total em cent√≠metros c√∫bicos (cc)
    """
    # F√≥rmula da cilindrada: (œÄ * (di√¢metro/2)¬≤ * curso * n√∫mero de cilindros) / 1000
    raio_pistao = diametro_pistao / 2
    volume_cilindro = math.pi * (raio_pistao ** 2) * curso_virabrequim
    cilindrada_total = (volume_cilindro * num_cilindros) / 1000
    
    return round(cilindrada_total, 2)

def calcular_rl(diametro_pistao, curso_virabrequim):
    """
    Calcula a rela√ß√£o Raio/Curso (R/L)
    
    Par√¢metros:
    - diametro_pistao: Di√¢metro do pist√£o em mil√≠metros
    - curso_virabrequim: Curso do virabrequim em mil√≠metros
    
    Retorna:
    - Rela√ß√£o R/L
    """
    raio_pistao = diametro_pistao / 2
    rl = raio_pistao / curso_virabrequim
    return round(rl, 3)

def classificar_motor_por_rl(rl):
    """
    Classifica o tipo de motor baseado na rela√ß√£o R/L
    
    Par√¢metros:
    - rl: Rela√ß√£o Raio/Curso
    
    Retorna:
    - Classifica√ß√£o do motor
    """
    if rl < 0.5:
        return "Motor Supercurso (Stroke)"
    elif 0.5 <= rl < 0.8:
        return "Motor Curso M√©dio"
    else:
        return "Motor Curto (Oversquare)"

# Configura√ß√£o da p√°gina do Streamlit
st.set_page_config(
    page_title="Calculadora de Cilindrada",
    page_icon="üöó",
    layout="centered"
)

# T√≠tulo do aplicativo
st.title("üöó Calculadora de Cilindrada de Motor")
st.markdown("Calcule a cilindrada total do seu motor")

# Entrada de dados
col1, col2, col3 = st.columns(3)

with col1:
    diametro_pistao = st.number_input(
        "Di√¢metro do Pist√£o (mm)", 
        min_value=1.0, 
        max_value=200.0, 
        value=80.0, 
        step=0.1
    )

with col2:
    curso_virabrequim = st.number_input(
        "Curso do Virabrequim (mm)", 
        min_value=1.0, 
        max_value=200.0, 
        value=70.0, 
        step=0.1
    )

with col3:
    num_cilindros = st.number_input(
        "N√∫mero de Cilindros", 
        min_value=1, 
        max_value=16, 
        value=4, 
        step=1
    )

# Bot√£o para calcular
if st.button("Calcular Cilindrada"):
    # Realizar c√°lculo
    cilindrada = calcular_cilindrada(diametro_pistao, curso_virabrequim, num_cilindros)
    
    # Calcular R/L
    rl = calcular_rl(diametro_pistao, curso_virabrequim)
    classificacao_motor = classificar_motor_por_rl(rl)
    
    # Exibir resultados
    st.subheader("Resultados")
    col1, col2 = st.columns(2)
    
    with col1:
        st.metric(label="Cilindrada Total", value=f"{cilindrada} cc")
    
    with col2:
        st.metric(label="Rela√ß√£o R/L", value=rl)
    
    # Classifica√ß√£o do motor
    st.markdown(f"**Tipo de Motor:** {classificacao_motor}")
    
    # Informa√ß√µes adicionais
    st.markdown("### Detalhes do C√°lculo")
    col1, col2, col3, col4 = st.columns(4)
    
    with col1:
        st.markdown(f"**Di√¢metro do Pist√£o:** {diametro_pistao} mm")
    
    with col2:
        st.markdown(f"**Curso do Virabrequim:** {curso_virabrequim} mm")
    
    with col3:
        st.markdown(f"**N√∫mero de Cilindros:** {num_cilindros}")
    
    with col4:
        st.markdown(f"**Rela√ß√£o R/L:** {rl}")

# Rodap√© com informa√ß√µes
st.markdown("---")
st.markdown("""
### Sobre o C√°lculo de Cilindrada e Rela√ß√£o R/L

**Cilindrada:**
- Volume do Cilindro = œÄ * (Raio do Pist√£o)¬≤ * Curso do Virabrequim
- Cilindrada Total = Volume do Cilindro * N√∫mero de Cilindros

**Rela√ß√£o R/L (Raio/Curso):**
- R/L < 0.5: Motor Supercurso (Stroke)
- 0.5 ‚â§ R/L < 0.8: Motor Curso M√©dio
- R/L ‚â• 0.8: Motor Curto (Oversquare)

**Significado:**
- Influencia caracter√≠sticas como torque, rota√ß√£o m√°xima e efici√™ncia
- Afeta o desempenho e comportamento do motor
""")

st.markdown("Desenvolvido por Ferlin & J√£o sem Dedo| C√°lculos Baseados em Engenharia mec√¢nica") 
